import json
from Bio import SeqIO
import Bio
import boto3
import uuid

s3_client = boto3.client('s3')


def lambda_handler(event, context):
    for record in event['Records']:
        bucket = record['s3']['bucket']['name']
        key = record['s3']['object']['key']
        download_path = '/tmp/{}{}'.format(uuid.uuid4(), key)
        upload_path = '/tmp/txtformat-{}'.format(key)
        s3_client.download_file(bucket, key, download_path)
        seq_conversion(download_path, upload_path)
        s3_client.upload_file(upload_path, '{}txtformat'.format(bucket), key)


def seq_conversion(download_path, upload_path):
    # TODO: check file extension and handle
    record = SeqIO.read(download_path, "abi")
    # create cat file and result file with maft
    ul97gene = 'ATGTCCTCCGCACTTCGGTCTCGGGCTCGCTCGGCCTCGCTCGGAACGACGACTCAGGGCTGGGATCCGCCGCCATTGCGTCGTCCCAGCAGGGCGCGCCGGCGCCAGTGGATGCGCGAAGCTGCGCAGGCCGCCGCTCAAGCCGCGGTACAGGCCGCGCAGGCCGCCGCCGCTCAAGTTGCCCAGGCTCACGTCGATGAAGACGAGGTCGTGGATCTGATGACCGACGAGGCCGGCGGCGGCGTCACCACTTTGACCACCCTGAGTTCCGTCAGCACAACCACCGTGCTTGGACACGCGACTTTTTCCGCATGCGTTCGAAGTGACGTGATGCGTGACGGAGAAAAAGAGGACGCGGCTTCGGACAAGGAGAACCAGCGTCGGCCCGTGGTGCCGTCCACGTCGTCTCGCGGCAGCGCCGCCAGCGGCGACGGTTACCACGGCTTGCGCTGCCGCGAAACCTCGGCCATGTGGTCGTTCGAGTACGATCGCGACGGCGACGTGACCAGCGTACGCCGCGCTCTCTTCACCGGCGGCAGCGACCCCTCGGACAGCGTGAGCGGCGTCCGCGGTGGACGCAAACGCCCGTTGCGTCCGCCGTTGGTGTCGCTGGCCCGCACCCCGCTGTGCCGACGTCGTGTGGGCGGCGTGGACGCGGTGCTCGAAGAAAACGACGTGGAGCTGCGCGCGGAAAGTCAGGACAGCGCCGTGGCATCGGGCCCGGGCCGCGTTCCGCAGCCGCTCAGCGGTAGTTCCGGGGAGGAATCCGCCACGGCGGTGGAGGCCGACTCCACGTCACACGACGACGTGCATTGCACCTGTTCCAACGACCAGATCATCACCACGTCCATCCGCGGCCTTACGTGCGACCCGCGTATGTTCTTGCGCCTTACGCATCCCGAGCTCTGCGAGCTCTCTATCTCCTACCTGCTGGTCTACGTGCCCAAAGAGGACGATTTTTGCCACAAGATCTGTTATGCCGTGGACATGAGCGACGAGAGCTACCGCCTGGGCCAGGGCTCCTTCGGCGAGGTCTGGCCGCTCGATCGCTATCGCGTGGTCAAGGTGGCGCGTAAGCACAGCGAGACGGTGCTCACGGTCTGGATGTCGGGCCTGATCCGCACGCGCGCCGCTGGCGAGCAACAGCAGCCGCCGTCGCTGGTGGGCACGGGCGTGCACCGCGGTCTGCTCACGGCCACGGGCTGCTGTCTGCTGCACAACGTCACGGTACATCGACGTTTCCACACAGACATGTTTCATCACGACCAGTGGAAGCTGGCGTGCATCGACAGCTACCGACGTGCCTTTTGCACGTTGGCCGACGCTATCAAATTTCTCAATCACCAGTGTCGTGTATGCCACTTTGATATTACACCCATGAACGTGCTCATCGACGTGAACCCGCACAACCCCAGCGAGATCGTGCGCGCCGCGCTGTGCGATTACAGCCTCAGCGAGCCCTATCCGGATTACAACGAGCGCTGTGTGGCCGTCTTTCAGGAGACGGGCACGGCGCGCCGCATCCCCAACTGCTCGCACCGTCTGCGCGAATGTTACCACCCTGCTTTCCGACCCATGCCGCTGCAGAAGCTGCTCATCTGCGACCCGCACGCGCGTTTCCCCGTAGCCGGCCTACGGCGTTATTGCATGTCGGAGTTGTCGGCGCTGGGTAACGTGCTGGGCTTTTGCCTCATGCGGCTGTTGGACCGGCGCGGTCTGGACGAGGTGCGCATGGGTACGGAGGCGTTGCTCTTTAAGCACGCCGGCGCGGCCTGCCGCGCGTTGGAGAACGGCAAGCTCACGCACTGCTCCGACGCCTGTCTGCTCATTCTGGCGGCGCAAATGAGCTACGGCGCCTGTCTCCTGGGCGAGCATGGCGCCGCGCTGGTGTCGCACACGCTACGCTTTGTGGAGGCCAAGATGTCCTCGTGTCGCGTACGCGCCTTTCGCCGCTTCTACCACGAATGCTCGCAGACCATGCTGCACGAATACGTCAGAAAGAACGTGGAGCGTCTGTTGGCCACGAGCGACGGGCTGTATTTATATAACGCCTTTCGGCGCACCACCAGCATAATCTGCGAGGAGGACCTTGACGGTGACTGCCGTCAACTGTTCCCCGAGTAA'
    q = format(record.seq)
    alignments = Bio.pairwise2.align.globalms(q, ul97gene, 2, 1, -1, -15, -10)
    sequence = alignments[0][0]
    sequence = sequence[0].replace('-', 'n')
    my_seq = Bio.Seq.Seq(sequence)
    function_output = str(my_seq.translate())
    txt = open(upload_path, "w+")
    txt.write(function_output)
    txt.close()
    return {
        'statusCode': 200,
        'body': json.dumps(function_output)
    }
